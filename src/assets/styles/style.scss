@import './variables';

* {
  box-sizing: border-box;
}

html, body {
  background: map-get($colors, 'bg');
  color: map-get($colors, 'text');
  font-family: 'PingFang SC', 'STHeitiSC-Light', 'Helvetica-Light', arial, sans-serif, 'Droid Sans Fallback';
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

// colors
@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }
}

// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

// text size
@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size !important;
  }
}

// text-ellipsis
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//flex
.d-flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

//spacing
@each $typeKey,
$type in $spacing-types {

  //m-0
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size;
    }
  }

  //mx-0
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size;
      #{$type}-right: $size;
    }

    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size;
      #{$type}-bottom: $size;
    }
  }

  //mt-0
  @each $dirKey,
  $dir in $spacing-direction {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$dirKey}-#{$sizeKey} {
        #{$type}-#{$dir}: $size;
      }
    }
  }
}

// width, height
.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
}
